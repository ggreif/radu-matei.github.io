<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Radu Matei&#39;s Blog</title>
    <link>https://radu-matei.com/categories/golang/</link>
    <description>Recent content in Golang on Radu Matei&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 18 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://radu-matei.com/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kube-toolkit: Toolkit for creating gRPC-based CLI tools for Kubernetes, written in Go</title>
      <link>https://radu-matei.com/blog/kube-toolkit/</link>
      <pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/kube-toolkit/</guid>
      <description>Table of Contents  Introduction Architecture Vendoring kube-toolkit Defining and using gRPC services Connecting to the Kubernetes cluster Using cobra, folder structure and adding your own commands See in in action Conclusion  Introduction If you ever used Helm or Draft, you know they are very cool command-line tools that connect to a Kubernetes cluster, more specifically to a server-side component (Tiller in the case of Helm, Draftd for Draft) without exposing ports on the Internet, and allow you to interact with your cluster through gRPC-based services.</description>
    </item>
    
    <item>
      <title>Update Azure Container Instances with Docker Hub webhooks</title>
      <link>https://radu-matei.com/blog/aci-update/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/aci-update/</guid>
      <description>Table of Contents  Introduction Webhooks from Docker Hub Using the Azure Go SDK to update container groups See it in action Final Thoughts Feedback  Introduction Back in July, Microsoft announced Azure Container Instances, a new Azure service delivering containers with great simplicity and speed and without any Virtual Machine infrastructure to manage. ACIs are the fastest and easiest way to run a container in the cloud.
Essentially, this allowed you to run single or multi-container groups (scheduled on the same host machine, within the same local network, storage and lifetime) with fast startup times, hypervisor-level security, public IP address connectivity and billing by the second.</description>
    </item>
    
  </channel>
</rss>