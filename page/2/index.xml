<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>radu&#39;s blog</title>
    <link>https://radu-matei.com/</link>
    <description>Recent content on radu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://twitter.com/matei_radu&#34; rel=&#34;noreferrer&#34; target=&#34;_blank&#34;&gt;Radu M&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://radu-matei.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    
    <item>
      <title>Securely distributing and signing WebAssembly modules using OCI and TUF</title>
      <link>https://radu-matei.com/blog/wasm-oci-tuf/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/wasm-oci-tuf/</guid>
      <description>Attacks on software repositories happen all the time, and any future WebAssembly repository and client tooling should be prepared to mitigate these attacks. In this article we will explore a minimum security model for WebAssembly registries and client tooling based on The Update Framework, and how to integrate this model when distributing WebAssembly modules using OCI registries.</description>
    </item>
    
    <item>
      <title>Distributing WebAssembly modules using OCI registries</title>
      <link>https://radu-matei.com/blog/wasm-to-oci/</link>
      <pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/wasm-to-oci/</guid>
      <description>WebAssembly (WASM) is a binary instruction format for a stack-based virtual machine. In familiar terms, WASM is used as a compilation target for various programming languages (C, C++, Rust, or Golang, for example), generating a compact binary with a known format. Mozilla Developer Network describes WebAssembly as having huge implications for the web platform — it provides a way to run code written in multiple languages on the web at near native speed, with client apps running on the web that previously couldn’t have done so.</description>
    </item>
    
    <item>
      <title>Cross platform GitHub Action for downloading, extracting, and adding tools to path</title>
      <link>https://radu-matei.com/blog/github-action-cross-plat-configure-tools/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/github-action-cross-plat-configure-tools/</guid>
      <description>Ever since I started to use GitHub Actions, one of the tasks I copy and pasted the most contained the following steps:
 download a file or an archive containing a statically compiled tool extract if it is an archive copy the target tool to a directory in the path  And after an embarrassing number of tries, my jobs would contain a step that would resemble the following (taken from an actual GitHub Action):</description>
    </item>
    
    <item>
      <title>The state of CNAB: Part 2 - CNAB Registries</title>
      <link>https://radu-matei.com/blog/state-of-cnab-part-2/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/state-of-cnab-part-2/</guid>
      <description>In this series, we explore the state of the Cloud Native Application Bundles (CNAB) specifications, and do a deep dive into the distribution of bundles, and security and attestation.</description>
    </item>
    
    <item>
      <title>The state of CNAB: Part 1 - CNAB Core</title>
      <link>https://radu-matei.com/blog/state-of-cnab-part-1/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/state-of-cnab-part-1/</guid>
      <description>In this series, we explore the state of the Cloud Native Application Bundles (CNAB) specifications, and do a deep dive into the distribution of bundles, and security and attestation.</description>
    </item>
    
  </channel>
</rss>
