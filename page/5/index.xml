<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>radu&#39;s blog</title>
    <link>https://radu-matei.com/</link>
    <description>Recent content on radu&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://twitter.com/matei_radu&#34; target=&#34;_blank&#34;&gt;Radu M&lt;/a&gt; 2019</copyright>
    <lastBuildDate>Sun, 03 Nov 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://radu-matei.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    
    <item>
      <title>Kubernetes 1.8 on Azure</title>
      <link>https://radu-matei.com/blog/k8s18-azure/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/k8s18-azure/</guid>
      <description>In this post you&amp;rsquo;ll see how to deploy Kubernetes 1.8 and later on Azure using ACS Engine, an open-source tool that creates the entire configuration for your orchestration cluster and deploys it on Azure Container Service.</description>
    </item>
    
    <item>
      <title>The Hybrid Cluster: A CI/CD Story [Part 1] - Configuring a hybrid swarm mode cluster in Azure with acs-engine</title>
      <link>https://radu-matei.com/blog/hybrid-swarmmode/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/hybrid-swarmmode/</guid>
      <description>We&amp;rsquo;ll explore how to create a hybrid Docker Swarm Mode cluster with Linux and Windows agents, deploy it on Azure Container Service using ACS Engine, see how to connect to the cluster and manage it and finally how to deploy hybrid services with both Linux and Windows Server containers.</description>
    </item>
    
    <item>
      <title>Real-Time ASP .NET Core</title>
      <link>https://radu-matei.com/blog/real-time-aspnet-core/</link>
      <pubDate>Sat, 18 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/real-time-aspnet-core/</guid>
      <description>We will write an ASP.NET Core middleware for providing real-time functionality to your applications. To its core, this is a WebSockets middleware for ASP .NET Core applications with TypeScript / JavaScript and .NET clients - all this wile exploring the inner workings of ASP.NET Core middleware.</description>
    </item>
    
    <item>
      <title>Creating a WebSockets middleware for ASP .NET Core</title>
      <link>https://radu-matei.com/blog/aspnet-core-websockets-middleware/</link>
      <pubDate>Fri, 30 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/aspnet-core-websockets-middleware/</guid>
      <description>We&amp;rsquo;ll explore the low-level websockets API in .NET Core, understand the Middleware concept and finally write together a websocket manager middleware that handles communication between various clients and your ASP.NET Core application.</description>
    </item>
    
    <item>
      <title>Dockerizing an ASP.NET Core application with GitHub, Docker Cloud and Azure</title>
      <link>https://radu-matei.com/blog/aspnet-core-docker-azure/</link>
      <pubDate>Sat, 26 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://radu-matei.com/blog/aspnet-core-docker-azure/</guid>
      <description>In this article, we will take the simplest ASP.NET Core application, run it with Docker locally, then create Continuous Integration and Continuous Deployment flows using a GitHub repository, Docker Cloud and an Azure virtual machine that will act as a node for Docker Cloud.</description>
    </item>
    
  </channel>
</rss>
